/*
 *  ======== config.bld ========
 * User note: YOU MUST MODIFY THIS FILE TO SPECIFY THE COMPILER TOOL PATH.
 *
 * Edit this file to specify compiler toolchain paths and platform.
 */

/* location of your C6000 codegen tools */
var dsptarget = "" + java.lang.System.getenv("XDC_DSP_TARGET");
var codegen = "" + java.lang.System.getenv("CODEGEN_INSTALL_DIR");

/* Verify that XDC_TARGETS was set correctly as an environment variable */
if (dsptarget=="null" || dsptarget=="") {
    print("Warning: XDC_DSP_TARGET  not found. Verify that "
        + "XDC_TARGETS is set correctly in the Makefile.");
}

/* Verify that CODEGEN_INSTALL_DIR was set as an environment variable */
if (codegen=="null" || codegen=="") {
    print("Warning: TI Code Generation Tools not found. Verify that "
        + "CODEGEN_INSTALL_DIR is set correctly in the Makefile.");
} else if ( !java.io.File( codegen ).isDirectory() ) {
    print("Warning: CODEGEN_INSTALL_DIR is not set to a valid directory.");
}

/* Verify that XDC_PLATFORM was set as an environment variable */
var xdcplat = "" + java.lang.System.getenv("XDC_PLATFORM");
if (xdcplat=="null" || xdcplat==""){
    print("Warning: XDC_PLATFORM not found. Verify that XDC_PLATFORM "
        + "is set correctly in the Makefile.");
}

var C6X = xdc.useModule( dsptarget );
C6X.rootDir = codegen;
C6X.platform = xdcplat;

/* User passes in $(CROSS_COMPILE) where $(CROSS_COMPILE)gcc is their compiler
   Then the TOOLDIR and LONGNAME are derived based on a regex of CROSS_COMPILE
*/
var crosscompile = "" + java.lang.System.getenv("CROSS_COMPILE");

/* Verify that CROSS_COMPILE was set as an environment variable and that 
   $(CROSS_COMPILE)gcc is a valid file */
if (crosscompile=="null" || crosscompile=="") {
    print("Warning: ARM toolchain not found. CROSS_COMPILE is currently set "
        + "to " + crosscompile + ". Verify that CROSS_COMPILE has been set "
        + "correctly in the Makefile.");
} else if ( !java.io.File( crosscompile + "gcc" ).exists() ) {
    print("Warning: GCC compiler " + crosscompile + "gcc does not exist. "
        + "Verify that CROSS_COMPILE has been set correctly in the Makefile");
}

var tooldir = "";
var longName = "";

/* Search CROSS_COMPILE for bin/ If only 1 bin/ is found, set the tooldir to 
   the path prior to bin/ and the prefix to "bin/" + remainder of path, 
   else leave the tooldir as "" and set the LONGNAME to the full CROSS_COMPILE
   path 
*/
var regex = new RegExp("bin/");
var find = crosscompile.split( regex );

if (find[0]!=crosscompile && find.length==2) {
    tooldir = find[0];
    longName = "bin/" + find[1] + "gcc";
} else {
    longName = crosscompile + "gcc";
}

/* location of the GCC Arm9 tools */
var GCArmv5T = xdc.useModule('gnu.targets.arm.GCArmv5T');
GCArmv5T.LONGNAME = longName;
GCArmv5T.platform = java.lang.System.getenv("XDC_PLATFORM");
GCArmv5T.rootDir = tooldir;

Build.targets = [
];
