/*
 *  Configure CE's OSAL.  This codec server only builds for the BIOS-side of
 *  a heterogeneous system, so use the "DSPLINK_BIOS" configuration.
 */
var osalGlobal = xdc.useModule('ti.sdo.ce.osal.Global');
osalGlobal.runtimeEnv = osalGlobal.DSPLINK_BIOS;
osalGlobal.traceBufferSize = 0x40000;

/* configure default memory seg id to BIOS-defined "DDR2" */
osalGlobal.defaultMemSegId = "DDR2";

/* activate BIOS logging module */
var LogServer = xdc.useModule('ti.sdo.ce.bioslog.LogServer');


/*
 *  ======== Server Configuration ========
 */
var Server = xdc.useModule('ti.sdo.ce.Server');

/* The server's stackSize */
Server.threadAttrs.stackSize = 16384;

/* The servers execution priority */
Server.threadAttrs.priority = Server.MINPRI;

utils.importFile("codec.cfg");

/*
 * Note that we presume this server runs on a system with DSKT2 and DMAN3,
 * so we configure those modules here.
 */


/*
 *  ======== DSKT2 and RMAN Configuration ========
 *  XDAIS Algorithm Memory and DMA allocation
 */
    var DSKT2 = xdc.useModule('ti.sdo.fc.dskt2.DSKT2');

    DSKT2.DARAM0     = "L1DHEAP";
//    DSKT2.DARAM0     = "DDR2";
    DSKT2.DARAM1     = "L1DHEAP";
    DSKT2.DARAM2     = "L1DHEAP";
    DSKT2.SARAM0     = "L1DHEAP";
    DSKT2.SARAM1     = "L1DHEAP";
    DSKT2.SARAM2     = "L1DHEAP";
    DSKT2.ESDATA     = "DDRALGHEAP";
    DSKT2.IPROG      = "L1DHEAP";
    DSKT2.EPROG      = "DDRALGHEAP";
    DSKT2.DSKT2_HEAP = "DDR2";    /* to allocate internal DSKT2 object */      
    DSKT2.trace = true;
    DSKT2.debug = true;

    DSKT2.DARAM_SCRATCH_SIZES = [ 3145728, 65536, 8192, 0,0,0,0,0, /* ... */ 0 ];
    DSKT2.SARAM_SCRATCH_SIZES = [ 65536, 8192, 0,0,0,0,0, /* ... */ 0 ];


/*
 *  ======== DMAN3 (DMA manager) configuration ========
 */
    var DMAN3 = xdc.useModule('ti.sdo.fc.dman3.DMAN3');

    DMAN3.heapInternal    = "L1DHEAP";
    DMAN3.heapExternal    = "DDRALGHEAP";
    DMAN3.idma3Internal   = false;
    DMAN3.scratchAllocFxn = "DSKT2_allocScratch";
    DMAN3.scratchFreeFxn  = "DSKT2_freeScratch";

    DMAN3.paRamBaseIndex     = 80;  // 1st EDMA3 PaRAM set available for DMAN3
    DMAN3.numQdmaChannels    = 8;   // number of device's QDMA channels to use
    DMAN3.qdmaChannels       = [0,1,2,3,4,5,6,7]; // choice of QDMA channels to use 
    DMAN3.numPaRamEntries    = 48;  // number of PaRAM sets exclusively used by DMAN
    DMAN3.numPaRamGroup[0]   = 48;  // number of PaRAM sets for scratch group 0
    DMAN3.numTccGroup[0]     = 32;  // number of TCCs assigned to scratch group 0
    DMAN3.tccAllocationMaskL = 0;   // bit mask indicating which TCCs 0..31 to use
    DMAN3.tccAllocationMaskH = 0xffffffff; // assign all TCCs 32..63 for DMAN
    DMAN3.debug = false;
    DMAN3.trace = false;

