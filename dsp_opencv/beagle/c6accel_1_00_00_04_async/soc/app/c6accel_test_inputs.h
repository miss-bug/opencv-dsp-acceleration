/*==============================================================================*/
/*   Copyright (c) 2010, Texas Instruments Incorporated                         */
/*   All rights reserved.                                                       */
/*                                                                              */
/*   File name: C6Accel_test_inputs.h                                           */
/*                                                                              */
/*   Description:                                                               */
/*   File contains definitions, input vectors requires to test DSP kernels      */
/*   in C6Accel codec.                                                          */
/*                                                                              */
/*==============================================================================*/

#ifndef C6ACCEL_TESTS_INPUTS_H
#define C6ACCEL_TESTS_INPUTS_H

#ifdef _TMS320C6X
#pragma DATA_ALIGN(x, 8);
#pragma DATA_ALIGN(h, 8);
#endif

/* ======================================================================== */
/*  Parameters of fixed dataset.                                            */
/* ======================================================================== */
#define R1   (10)
#define C1R2 (12)
#define C2   (16)
#define R1C1 (120)
#define R1C2 (160)
#define R2C2 (192)

/* Parameters of fixed vector set. */
#define nElements  (256)                   /* Number of samples                    */
#define PAD        (16)                    /* Amount of pad (for catching overrun) */

/* Parameters for fir gen */
#define NH (8)
#define NX (R1C1)
#define NR (NX-NH+1)

const short h[NH] = {

  -0x0007,  0x002A, -0x0006,  0x0027, -0x0016,  0x001E,  0x0047,  0x005B

};

/* Initialized arrays with fixed test data for computing dot products*/
short m[nElements + 2*PAD] =
{
    -0x38D9,  0x07A2,  0x15E6, -0x60C6, -0x0020, -0x6123,  0x369A,  0x0358,
    -0x02D5, -0x55D0, -0x22F2,  0x0945,  0x54DE, -0x2E11, -0x6ADE,  0x3DD0,
    -0x1675,  0x1BEC,  0x3D53, -0x1A35, -0x1F57,  0x6BB0, -0x6FBC, -0x1AD2,
     0x4F9C,  0x6FA8, -0x5C9F,  0x4C7B,  0x341B,  0x6BE1, -0x0BD6,  0x06E0,
     0x3979,  0x6BB6,  0x7C9F,  0x2DA2, -0x51B1,  0x5C0A,  0x3F44, -0x79C1,
     0x5809, -0x7483, -0x17AD, -0x5E29,  0x78CE,  0x0228, -0x137B,  0x1B54,
    -0x5DAE,  0x4F52, -0x5901, -0x7728, -0x3202,  0x36AB,  0x06E3, -0x7D20,
     0x3305, -0x4476,  0x40FC,  0x5AB7,  0x70D0,  0x19A6, -0x06EC, -0x0A62,
     0x6950,  0x21D5, -0x7CA1,  0x433E,  0x73B0,  0x7449, -0x6570, -0x192F,
     0x47E7,  0x2BD0,  0x250F,  0x7896,  0x32AF,  0x6194,  0x7DC9, -0x0BFF,
     0x1156,  0x1FDE, -0x45D7, -0x32D5, -0x6E09,  0x3352, -0x7D52,  0x2008,
     0x2E8E,  0x663C, -0x1E61, -0x6E2A, -0x7E8C, -0x63B5, -0x5B99,  0x4A57,
     0x46B3,  0x555C, -0x49F1, -0x5EC0, -0x473C,  0x16BC,  0x0855, -0x1D88,
    -0x5FD6,  0x3574,  0x7BEB, -0x3F77, -0x4897, -0x75F4,  0x4C4F, -0x1B25,
    -0x3C16, -0x78A6, -0x7132,  0x2D2F,  0x0331,  0x34C6,  0x1A20,  0x0BD8,
     0x5605, -0x7168, -0x6ADD, -0x7ECB, -0x5418, -0x3038, -0x0FBB,  0x4DF4,
     0x3B7C,  0x15C4, -0x1004, -0x4479,  0x0145, -0x073E,  0x36EF, -0x7095,
    -0x09B6,  0x7811,  0x5F34, -0x5C5E, -0x63E6, -0x241A, -0x74C5, -0x620A,
     0x42B1, -0x17D2,  0x02CC,  0x5779, -0x6841,  0x12E1,  0x52B5,  0x61CC,
    -0x0534, -0x09AB,  0x778B,  0x2B9C,  0x13C4, -0x2CF0, -0x7AEB,  0x5BEF,
     0x325C,  0x56A2,  0x55D8, -0x4560, -0x0F23,  0x56F6, -0x3FC3,  0x57AE,
    -0x662E, -0x1453, -0x2A22,  0x40C0, -0x2CEF,  0x78F4, -0x688A,  0x676E,
     0x16A6,  0x0B5E, -0x3B19,  0x2FCA,  0x5F26, -0x55C2,  0x1CF0,  0x16AD,
    -0x5425,  0x0703, -0x4E07,  0x0B40, -0x46AC,  0x1013, -0x487E, -0x1BB5,
    -0x6F2B, -0x0D59,  0x5DB7,  0x7DC1,  0x472E, -0x11D2,  0x2EA3, -0x06F1,
    -0x699B, -0x565A,  0x6C7F, -0x5552, -0x542C,  0x4C83, -0x0454,  0x1E6E,
    -0x3CEA,  0x1B89,  0x4FC6, -0x31F0,  0x0761, -0x1FCE, -0x28A8, -0x0A6F,
     0x33BB, -0x32ED,  0x78B7,  0x0EC1,  0x7B95,  0x33BD, -0x7785,  0x7199,
     0x3941, -0x595F, -0x36EC, -0x6831, -0x1E35,  0x087D, -0x0AF6, -0x76D6,
    -0x4749, -0x0E45,  0x4152, -0x14DE, -0x2EE2,  0x065E,  0x7151,  0x332E,
    -0x345C, -0x5616, -0x140B, -0x7E9B, -0x2222, -0x6332,  0x4E75, -0x6227,
    -0x6273, -0x0231,  0x1132, -0x66D3,  0x133E,  0x2CF6, -0x57CC, -0x620A,
    -0x7236,  0x187B, -0x5733,  0x5159, -0x46C3,  0x6D34,  0x77DE,  0x7067,
    -0x776E,  0x2A04, -0x01CB,  0x01BF,  0x4EDB,  0x19CC, -0x2169, -0x5112,
    -0x51BB, -0x52A6, -0x501D, -0x31F0, -0x367F, -0x3321, -0x4429, -0x7ECD,
     0x2F03, -0x11A2, -0x3206, -0x7C03,  0x1AB4,  0x33A4,  0x7323,  0x1A0B
};

short n[nElements + 2*PAD] =
{
     0x6A73, -0x2EC6,  0x5523, -0x5563, -0x19FE,  0x6FDE,  0x050F,  0x6FFA,
     0x49D2, -0x210A, -0x2454, -0x20E9, -0x76D3, -0x4172,  0x567B,  0x2B00,
    -0x17BB, -0x7CB3,  0x7CE7,  0x6C83,  0x52A0,  0x61EF, -0x3BEE, -0x1466,
     0x6D66, -0x623C,  0x09C6,  0x1C16,  0x0615, -0x3C59, -0x0CFA, -0x50F4,
     0x2B0E,  0x4002,  0x7ABE,  0x5583, -0x6176, -0x1DBD, -0x24EC, -0x661E,
     0x0069, -0x429D, -0x6221,  0x6FA3,  0x466C, -0x0A1B,  0x19B9, -0x2343,
    -0x0CBE, -0x142D,  0x0337,  0x4A5D, -0x65FA,  0x5445,  0x7EBB, -0x05AC,
     0x1890, -0x5220,  0x316F,  0x26CB,  0x2930, -0x6123, -0x2024,  0x39BB,
    -0x55BB, -0x47F1,  0x0EA7, -0x4561,  0x323B,  0x2066,  0x24E4,  0x57ED,
     0x6B5F, -0x6387, -0x6A68, -0x7134, -0x59DF, -0x7E74, -0x6B2B, -0x7972,
     0x4630,  0x0D9B, -0x3E0F, -0x7497,  0x62F4, -0x5D1D,  0x696E, -0x5C0D,
     0x2EF3,  0x666E, -0x420E, -0x2526, -0x4C75, -0x35E1, -0x6316, -0x5899,
     0x3A96,  0x72BE,  0x554E, -0x06CB,  0x126E,  0x0B8A, -0x0702,  0x68B4,
     0x07CC,  0x76C1, -0x5BB6,  0x0FE7,  0x290B, -0x1346,  0x6213, -0x781A,
     0x5655,  0x74EC,  0x0116, -0x7761,  0x091D,  0x4E87,  0x73CB, -0x51AA,
    -0x146E, -0x4AFA,  0x3472, -0x1893, -0x4EA2, -0x6CBE,  0x3BB9,  0x02E8,
    -0x4FAE, -0x717A, -0x1F7A, -0x1BD1, -0x348D,  0x0629,  0x5B63, -0x1F66,
     0x0FDF,  0x6B23,  0x3406, -0x43CC, -0x56E2, -0x7BDE,  0x4D81, -0x30BA,
    -0x6CB3,  0x12AB, -0x2475, -0x31DF, -0x7656,  0x5FAC, -0x088A, -0x4658,
    -0x37FA,  0x2C1D,  0x2935,  0x6F1B,  0x0E96, -0x75E8,  0x7A15,  0x65A5,
     0x5C9E,  0x0FFA, -0x7179,  0x0329,  0x058A, -0x0302,  0x3F9A,  0x28D2,
     0x7ADC, -0x4020,  0x4187,  0x52E0,  0x6181,  0x5CF6,  0x48EB, -0x1AC7,
     0x6C08,  0x3C5B,  0x341A,  0x2141,  0x7B36, -0x1D76, -0x3FEA,  0x3A61,
     0x7A7D,  0x0403,  0x3CA6,  0x0BE7, -0x6E2B, -0x7A90, -0x38F1,  0x0091,
     0x0A75, -0x2236, -0x7514, -0x6B97, -0x7715,  0x5DFE, -0x7A54, -0x00A7,
    -0x03E8, -0x2269,  0x5228, -0x7BFD, -0x1A72,  0x4DE1,  0x78E6, -0x1BA7,
     0x4ECA, -0x51E6, -0x428F,  0x7A79,  0x14D2, -0x15EC,  0x0259,  0x7844,
    -0x0949,  0x18E6,  0x1B54, -0x36C1, -0x1F8F, -0x5FEC,  0x39FD,  0x1B2A,
     0x06A5, -0x373E,  0x4DB5, -0x7420,  0x38C0,  0x1E5A, -0x07D8,  0x78F9,
     0x0901,  0x5443,  0x7AEC, -0x055C,  0x2BD7, -0x08F4,  0x2BCA,  0x7D4A,
    -0x5ED5, -0x765F, -0x07DE,  0x0573,  0x2803, -0x7107,  0x60EF, -0x6D9E,
     0x6B09, -0x1432, -0x7F0E,  0x2C00,  0x7D74,  0x3CCB, -0x6787,  0x117B,
     0x17CF, -0x7E37, -0x61B9, -0x6FD2,  0x1828, -0x4781,  0x5220, -0x02B9,
    -0x31EC, -0x26C5,  0x5B76,  0x52B3, -0x7CE1, -0x44E4, -0x204E, -0x0743,
    -0x32E7,  0x5347,  0x2FA3,  0x2602,  0x26C3, -0x155A, -0x1374,  0x7C16,
     0x475D, -0x5A60,  0x3558,  0x2B71, -0x3866, -0x00A8,  0x5861,  0x531B
};



/* ======================================================================== */
/*  Initialized arrays with fixed test data.                                */
/* ======================================================================== */
const short x[R1C1] =
{
     0x453E, -0x321D,  0x2DBB,  0x77C7, -0x57B9, -0x4ADD,  0x10B7, -0x113F,
    -0x1A92,  0x7CA7,  0x4A14,  0x719D,  0x3E61,  0x1858, -0x0D4C,  0x3D94,
    -0x32B8, -0x14B2,  0x1B6A,  0x7A1D,  0x0D5B,  0x1D2C,  0x55D8, -0x5459,
     0x5030, -0x5CBD,  0x0180,  0x059B,  0x4D97,  0x49E3,  0x68A4, -0x3629,
    -0x7AA5, -0x582E,  0x1D05,  0x3A65, -0x4734,  0x3D6B, -0x6CE3,  0x4A99,
     0x1D54, -0x50B4,  0x62F5, -0x75A7, -0x6AFA,  0x5D26,  0x3C1A, -0x793D,
    -0x6493,  0x4282, -0x0020,  0x1BE0,  0x1A7F,  0x621B, -0x1C86, -0x254E,
    -0x12FB, -0x4E5B,  0x3409,  0x223E,  0x3856, -0x4179, -0x60C9, -0x102C,
     0x5EB6, -0x097B,  0x7A6E,  0x1450, -0x41CD, -0x133A,  0x0358, -0x2677,
    -0x0BA0,  0x6732,  0x19A5, -0x4961, -0x1E47, -0x6657,  0x57C6,  0x1E70,
     0x1F12,  0x59F9,  0x13A4,  0x16D9,  0x26E6, -0x4FE0,  0x39FA, -0x6AF4,
    -0x2829, -0x673F,  0x7460,  0x57A6, -0x5BB4,  0x424C, -0x6068,  0x2CC9,
     0x0F61, -0x4030, -0x00AD,  0x6AE1, -0x4FD3,  0x56ED,  0x2FDA, -0x759C,
    -0x726F,  0x78E3,  0x42DF, -0x63D3, -0x1F88, -0x71D0,  0x07E8, -0x6D4A,
     0x21E5, -0x6C4D, -0x0072,  0x0EEE,  0x749D, -0x4622, -0x2AF7, -0x3A2B,
};

const short y[R2C2] =
{
     0x126C,  0x3DE7, -0x754D,  0x360C, -0x2589, -0x2234, -0x2DAF, -0x7E1F,
     0x022A, -0x4C8A, -0x34A6,  0x2A23, -0x5A1A,  0x4B95, -0x0317,  0x7430,
    -0x7091, -0x0CC1, -0x0A3E, -0x7AFE,  0x645A, -0x50BD,  0x0909,  0x6090,
     0x34AE, -0x56B3, -0x3AA9,  0x438B,  0x1C64,  0x62BE, -0x5E6A,  0x7A07,
     0x0D08,  0x6089, -0x5D4D,  0x0B27,  0x4A2C,  0x79F5,  0x5A86,  0x4061,
    -0x4411, -0x6674,  0x19FC,  0x7F77, -0x4EBE,  0x0E21, -0x5D11,  0x72BE,
     0x2232,  0x4040,  0x3DA5, -0x1736,  0x10DD, -0x192A, -0x768A,  0x770A,
     0x1261, -0x788B, -0x2778,  0x4989, -0x4999,  0x7905,  0x6F1E,  0x184B,
    -0x3C6D,  0x1543, -0x6F94, -0x3588, -0x0D80,  0x57D4, -0x728A, -0x5E27,
     0x4092, -0x59A4, -0x2322, -0x762C,  0x684B, -0x0AA5,  0x5F2B,  0x5F6B,
    -0x5CA5, -0x01CC, -0x1F8D, -0x35A1,  0x432A, -0x35C6, -0x0E0F, -0x7FEF,
     0x3D0B,  0x3D0B,  0x2B67, -0x7BC7,  0x48D5, -0x1FE3,  0x0ADA,  0x4F02,
    -0x69DF, -0x6226,  0x4E99,  0x52AC, -0x322F, -0x4CF2,  0x34FE, -0x26B0,
     0x512C, -0x7CE4,  0x59F0, -0x4137, -0x7CBE, -0x7F4B, -0x5471, -0x1A85,
    -0x0F38, -0x0883,  0x3513, -0x0813,  0x322B, -0x1C8F,  0x2643,  0x59E8,
     0x7410,  0x7F60, -0x1D73, -0x27DB,  0x48FD, -0x1AAB, -0x7DD7, -0x0BD5,
    -0x1CA4,  0x524B, -0x71B5,  0x5C6E,  0x4C92,  0x6100,  0x4ED3,  0x7244,
    -0x5594, -0x12C8, -0x6F88,  0x6EDB,  0x3284, -0x36A5,  0x33E6,  0x05AC,
    -0x1E10,  0x13B5,  0x49C1,  0x1399, -0x721F,  0x5033,  0x430D,  0x3B48,
     0x6B6D,  0x18FB, -0x2711, -0x0233, -0x5DBB,  0x6FB3,  0x2341,  0x3640,
    -0x027C, -0x5C31, -0x4715,  0x795B,  0x5C52, -0x3241,  0x1380,  0x50AE,
    -0x0365, -0x42AD,  0x3917, -0x4178,  0x2082, -0x7CCF, -0x222D,  0x1931,
     0x46E0,  0x4CAF, -0x1DED, -0x6482,  0x7B64, -0x340E, -0x623A, -0x4B9A,
    -0x2D4B, -0x1563, -0x5F28, -0x7754, -0x44D3, -0x030A,  0x6E31, -0x67CF,
};

/* ======================================================================= */
/* Initilized arrays with fixed test data                                  */
/* ======================================================================= */
#define NCOEFS (64)
#define SFB (16383.5)
short ptr_Coefs[NCOEFS +  PAD] =
{
    0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000,
    (short)(-2.0*SFB), (short)(1.0*SFB),
    (short)( 1.4*SFB), (short)(-0.74*SFB),
    (short)( 2.0*SFB), (short)(1.0*SFB),
    (short)(-1.4*SFB), (short)(-0.74*SFB),
    (short)(-2.0*SFB), (short)(1.0*SFB),
    (short)( 1.4*SFB), (short)(-0.74*SFB),
    (short)( 2.0*SFB), (short)(1.0*SFB),
    (short)(-1.4*SFB), (short)(-0.74*SFB),
    (short)(-2.0*SFB), (short)(1.0*SFB),
    (short)( 1.4*SFB), (short)(-0.74*SFB),
    (short)( 2.0*SFB), (short)(1.0*SFB),
    (short)(-1.4*SFB), (short)(-0.74*SFB),
    (short)(-2.0*SFB), (short)(1.0*SFB),
    (short)( 1.4*SFB), (short)(-0.74*SFB),
    (short)( 2.0*SFB), (short)(1.0*SFB),
    (short)(-1.4*SFB), (short)(-0.74*SFB),
    (short)(-2.0*SFB), (short)(1.0*SFB),
    (short)( 1.4*SFB), (short)(-0.74*SFB),
    (short)( 2.0*SFB), (short)(1.0*SFB),
    (short)(-1.4*SFB), (short)(-0.74*SFB),
    (short)(-2.0*SFB), (short)(1.0*SFB),
    (short)( 1.4*SFB), (short)(-0.74*SFB),
    (short)( 2.0*SFB), (short)(1.0*SFB),
    (short)(-1.4*SFB), (short)(-0.74*SFB),
    (short)(-2.0*SFB), (short)(1.0*SFB),
    (short)( 1.4*SFB), (short)(-0.74*SFB),
    (short)( 2.0*SFB), (short)(1.0*SFB),
    (short)(-1.4*SFB), (short)(-0.74*SFB),
    (short)(-2.0*SFB), (short)(1.0*SFB),
    (short)( 1.4*SFB), (short)(-0.74*SFB),
    (short)( 2.0*SFB), (short)(1.0*SFB),
    (short)(-1.4*SFB), (short)(-0.74*SFB),
    0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000
};

/* ======================================================================== */
/*  Parameters of fixed dataset.                                            */
/* ======================================================================== */
#define Nmax (256)

/* ======================================================================== */
/*  Initialized arrays with fixed vector data.                              */
/* ======================================================================== */

/* Float test vector for IQmath kernels  (Range : -32767 to 32767)*/

float xin[Nmax] = {

907.9707,  -21251.35,  -12541.61,   2261.928,
29333.1,   -21513.34,   13251.59,  -17929.45,
-343.9902, -24595.24,  -27269.16,  -7233.777,
-14599.55, -8647.734,   31681.02,   2317.928,
17409.46,   9597.705,   17505.46,   18363.43,
21163.35,  -22811.3,    8221.744,  -12145.63,
-10033.69,  27339.16,   1293.959,  -6477.801,
6995.783,   18703.42,   28279.13,   24241.25,
24019.26,   11435.65,   16933.48,   5365.834,
-7259.777, -9461.709,  -19645.39,   21423.34,
-5511.83,  -2391.928,   31401.03,  -24481.25,
-18833.42,  30043.07,   15561.52,  -5961.816,
18355.43,   16899.48,   29937.08,  -30927.05,
-11879.63,  16837.48,  -16843.48,   5867.818,
-29923.08,  29885.08,  -11853.63,  -28877.11,
-3809.883,  27197.16,   4733.854,  -24979.23,
4571.857,  -16249.5,   -271.9922,  -17253.47,
-1509.953, -6155.811,   24443.24,  -4787.854,
-9291.715, -7735.762,  -29939.08,  -22243.31,
1463.955,   12881.6,   -26405.19,  -6499.801,
17917.45,  -16723.49,  -10301.68,  -17695.46,
-13247.59, -12809.61,   25373.22,  -30365.06,
9903.693,  -6645.795,   11551.64,   15241.53,
28689.12,  -17479.46,   22181.31,   30617.06,
18259.44,  -4489.861,   11407.65,   20273.37,
-22363.31, -14425.56,  -23899.26,   23865.26,
16395.49,  -19137.41,  -23595.27,  -13461.59,
19843.39,  -18419.43,   4133.873,   14127.56,
-19821.39,  32099.01,  -16381.5,   -4547.859,
16727.48,   23651.27,   25871.2,    31329.03,
-6855.789, -4443.863,  -24435.25,  -2773.914,
-17181.47,  31851.02,   10013.69,   6829.787,
-16915.48, -2957.91,    19001.41,  -27603.15,
-1547.953, -22767.3,   -16663.49,   29161.1,
7471.768,   31991.01,  -1489.955,   19639.39,
16001.51,  -7817.76,   -1317.959,   1761.943,
-26339.19,  6173.811,  -10015.69,  -23373.28,
18317.44,   13825.57,  -3529.893,   13405.58,
-26521.18,  30329.06,   3361.896,   15743.51,
5177.838,   9033.721,   18457.43,  -20453.37,
-12969.6,  -14233.56,   12057.63,  -13571.58,
4283.865,  -5345.836,  -12675.61,  -3635.889,
4303.865,  -791.9766,   6987.783,  -5515.83
-24221.25, -15993.51,  -30425.06,   31265.04,
-25263.22, -7991.754,   9613.701,  -9801.699,
3475.893,  -9279.715,   4287.865,  -1597.951,
-22041.32,  7549.768,  -21485.34,   3583.889,
-13617.58,  24387.25,   21957.32,   22601.3,
25919.2,    6209.807,   2657.916,  -21745.33,
10153.69,   12483.62,  -15477.52,  -25775.21,
20637.36,  -20227.38,  -5027.846,  -9709.701,
22229.31,  -23767.27,  -15553.52,  -21151.35,
-1317.959, -7853.758,   315.9902,   179.9941,
-9705.701,  1675.947,  -24863.23,   1279.959,
7019.783,   15261.53,   3725.885,  -10215.69,
19787.39,   5961.814,  -15275.53,   11183.65,
3415.893,   18933.42,   25407.22,   25557.21,
-28305.13,  19697.39,   26695.18,   9443.709,
-21945.32, -13019.6,   -21871.33,  -14079.57,
22409.31,   2379.924,  -30385.06,  -19189.41,
-31377.03, -9297.715,   7959.752,   1311.959,
3015.904,  -22697.3,    21189.35,  -30583.06,
-31067.04, -7987.754,   7621.764,  -31431.03,
8293.744,   27209.16,  -8205.748,   15035.54
};

/* Float test vector for IQmath kernels  (Range : -9999.99 to 9999.99)*/
float yin[Nmax] = {
277.0996,  -6485.589,  -3827.511,   690.3066,
8952.018,  -6565.545,   4044.186,  -5471.796,
-104.9805, -7506.096,  -8322.136,  -2207.64,
-4455.562, -2639.158,   9668.568,   707.3965,
5313.105,   2929.074,   5342.402,   5604.242,
6458.734,  -6961.663,   2509.152,  -3706.662,
-3062.131,  8343.498,   394.8975,  -1976.927,
2135.008,   5708.002,   8630.361,   7398.064,
7330.314,   3489.987,   5167.842,   1637.571,
-2215.574, -2887.57,   -5995.478,   6538.078,
-1682.128, -729.9805,   9583.119,  -7471.306,
-5747.675,  9168.691,   4749.141,  -1819.456,
5601.801,   5157.466,   9136.344,  -9438.468,
-3625.485,  5138.545,  -5140.376,   1790.77,
-9132.071,  9120.475,  -3617.55,   -8812.858,
-1162.719,  8300.162,   1444.701,  -7623.284,
1395.263,  -4959.102,  -83.00781,  -5265.498,
-460.8154, -1878.66,    7459.709,  -1461.181,
-2835.69,  -2360.837,  -9136.954,  -6788.324,
446.7773,   3931.271,  -8058.464,  -1983.641,
5468.135,  -5103.755,  -3143.918,  -5400.385,
-4042.965, -3909.298,   7743.521,  -9266.959,
3022.458,  -2028.196,   3525.387,   4651.484,
8755.484,  -5334.468,   6769.402,   9343.863,
5572.504,  -1370.238,   3481.442,   6187.128,
-6824.945, -4402.461,  -7293.694,   7283.318,
5003.657,  -5840.449,  -7200.921,  -4108.272,
6055.902,  -5621.333,   1261.596,   4311.52,
-6049.188,  9796.133,  -4999.385,  -1387.938,
5104.976,   7218.01,    7895.5,     9561.146,
-2092.283, -1356.2,    -7457.268,  -846.5566,
-5243.525,  9720.449,   3056.027,   2084.349,
-5162.349, -902.709,    5798.944,  -8424.064,
-472.4121, -6948.235,  -5085.444,   8899.527,
2280.271,   9763.174,  -454.7119,   5993.646,
4883.418,  -2385.862,  -402.2217,   537.7188,
-8038.322,  1884.153,  -3056.638,  -7133.172,
5590.204,   4219.356,  -1077.27,    4091.183,
-8093.864,  9255.973,   1026.0,     4804.683,
1580.198,   2756.955,   5632.929,  -6242.06,
-3958.126, -4343.868,   3679.806,  -4141.842,
1307.372,  -1631.469,  -3868.404,  -1109.618,
1313.476,  -241.6992,   2132.566,  -1683.349,
-7391.96,  -4880.977,  -9285.27,    9541.615,
-7709.954, -2438.962,   2933.957,  -2991.33,
1060.79,   -2832.028,   1308.593,  -487.6709,
-6726.678,  2304.075,  -6557.0,     1093.749,
-4155.88,   7442.619,   6701.043,   6897.576,
7910.148,   1895.14,    811.1563,  -6636.346,
3098.752,   3809.811,  -4723.506,  -7866.204,
6298.212,  -6173.09,   -1534.423,  -2963.254,
6784.051,  -7253.411,  -4746.7,    -6455.072,
-402.2217, -2396.848,   96.43555,   54.93164,
-2962.033,  511.4736,  -7587.883,   390.625,
2142.332,   4657.588,   1137.084,  -3117.673,
6038.813,   1819.456,  -4661.861,   3413.083,
1042.479,   5778.192,   7753.898,   7799.674,
-8638.298,  6011.347,   8146.965,   2882.077,
-6697.381, -3973.385,  -6674.798,  -4296.871,
6838.982,   726.3174,  -9273.063,  -5856.318,
-9575.797, -2837.521,   2429.197,   400.3906,
920.4092,  -6926.873,   6466.668,  -9333.487,
-9481.192, -2437.742,   2326.048,  -9592.276,
2531.125,   8303.824,  -2504.27,    4588.618
};

/* Float test vector for IQmath kernels  (Range : -10 to 10)*/
float Ain[Nmax]=
{
 0.2770996, -6.485596,  -3.827515,   0.6903076,
 8.952026,  -6.565552,   4.044189,  -5.471802,
-0.1049805, -7.506104,  -8.322144,  -2.207642,
-4.455566,  -2.63916,    9.668579,   0.7073975,
 5.31311,    2.929077,   5.342407,   5.604248,
 6.45874,   -6.96167,    2.509155,  -3.706665,
-3.062134,   8.343506,   0.3948975, -1.976929,
 2.13501,    5.708008,   8.630371,   7.398071,
 7.330322,   3.48999,    5.167847,   1.637573,
-2.215576,  -2.887573,  -5.995483,   6.538086,
-1.682129,  -0.7299805,  9.58313,   -7.471313,
-5.747681,   9.168701,   4.749146,  -1.819458,
 5.601807,   5.157471,   9.136353,  -9.438477,
-3.625488,   5.13855,   -5.140381,   1.790771,
-9.13208,    9.120483,  -3.617554,  -8.812866,
-1.16272,    8.300171,   1.444702,  -7.623291,
 1.395264,  -4.959106,  -0.08300781,-5.265503,
-0.4608154, -1.878662,   7.459717,  -1.461182,
-2.835693,  -2.36084,   -9.136963,  -6.78833,
 0.4467773,  3.931274,  -8.058472,  -1.983643,
 5.46814,   -5.10376,   -3.143921,  -5.400391,
-4.042969,  -3.909302,   7.74353,   -9.266968,
 3.022461,  -2.028198,   3.525391,   4.651489,
 8.755493,  -5.334473,   6.769409,   9.343872,
 5.57251,   -1.370239,   3.481445,   6.187134,
-6.824951,  -4.402466,  -7.293701,   7.283325,
 5.003662,  -5.840454,  -7.200928,  -4.108276,
 6.055908,  -5.621338,   1.261597,   4.311523,
-6.049194,   9.796143,  -4.99939,   -1.387939,
 5.10498,    7.218018,   7.895508,   9.561157,
-2.092285,  -1.356201,  -7.457275,  -0.8465576,
-5.24353,    9.720459,   3.05603,    2.084351,
-5.162354,  -0.90271,    5.79895,   -8.424072,
-0.4724121, -6.948242,  -5.085449,   8.899536,
 2.280273,   9.763184,  -0.4547119,  5.993652,
 4.883423,  -2.385864,  -0.4022217,  0.5377197,
-8.03833,    1.884155,  -3.056641,  -7.133179,
 5.59021,    4.21936,   -1.077271,   4.091187,
-8.093872,   9.255981,   1.026001,   4.804688,
 1.5802,     2.756958,   5.632935,  -6.242065,
-3.95813,   -4.343872,   3.67981,   -4.141846,
 1.307373,  -1.63147,   -3.868408,  -1.109619,
 1.313477,  -0.2416992,  2.132568,  -1.68335,
-7.391968,  -4.880981,  -9.285278,   9.541626,
-7.709961,  -2.438965,   2.93396,   -2.991333,
 1.060791,  -2.832031,   1.308594,  -0.4876709,
-6.726685,   2.304077,  -6.557007,   1.09375,
-4.155884,   7.442627,   6.70105,    6.897583,
 7.910156,   1.895142,   0.8111572, -6.636353,
 3.098755,   3.809814,  -4.723511,  -7.866211,
 6.298218,  -6.173096,  -1.534424,  -2.963257,
 6.784058,  -7.253418,  -4.746704,  -6.455078,
-0.4022217, -2.396851,   0.09643555, 0.05493164,
-2.962036,   0.5114746, -7.587891,   0.390625,
 2.142334,   4.657593,   1.137085,  -3.117676,
 6.038818,   1.819458,  -4.661865,   3.413086,
 1.04248,    5.778198,   7.753906,   7.799683,
-8.638306,   6.011353,   8.146973,   2.88208,
-6.697388,  -3.973389,  -6.674805,  -4.296875,
 6.838989,   0.7263184, -9.273071,  -5.856323,
-9.575806,  -2.837524,   2.429199,   0.4003906,
 0.9204102, -6.92688,    6.466675,  -9.333496,
-9.481201,  -2.437744,   2.32605,   -9.592285,
 2.531128,   8.303833,  -2.504272,   4.588623
};

/* Float test vector for IQmath kernels  (Range : -3 to 5.5)*/
float Bin[Nmax]=
{
1.853912, -0.6820984,  0.314682,    2.008865,
5.10701,  -0.7120819,  3.266571,   -0.3019257,
1.710632, -1.064789,  -1.370804,    0.9221344,
0.0791626, 0.7603149,  5.375717,    2.015274,
3.742416,  2.848404,   3.753403,    3.851593,
4.172028, -0.8606262,  2.690933,    0.3600006,
0.6016998, 4.878815,   1.898087,    1.008652,
2.550629,  3.890503,   4.986389,    4.524277,
4.498871,  3.058746,   3.687943,    2.36409,
0.9191589, 0.66716,   -0.4983063,   4.201782,
1.119202,  1.476257,   5.343674,   -1.051743,
-0.4053802,5.188263,   3.53093,     1.067703,
3.850677,  3.684052,   5.176132,   -1.789429,
0.3904419, 3.676956,  -0.1776428,   2.421539,
-1.67453,  5.170181,   0.3934174,  -1.554825,
1.31398,   4.862564,   2.291763,   -1.108734,
2.273224, -0.1096649,  1.718872,   -0.2245636,
1.577194,  1.045502,   4.547394,    1.202057,
0.686615,  0.8646851, -1.676361,   -0.7956238,
1.917542,  3.224228,  -1.271927,    1.006134,
3.800552, -0.1639099,  0.5710297,  -0.2751465,
0.2338867, 0.2840118,  4.653824,   -1.725113,
2.883423,  0.9894257,  3.072021,    3.494308,
5.03331,  -0.2504272,  4.288528,    5.253952,
3.839691,  1.23616,    3.055542,    4.070175,
-0.8093567,0.09907532,-0.9851379,   4.481247,
3.626373, -0.4401703, -0.950347,    0.2093964,
4.020966, -0.3580017,  2.223099,    3.366821,
-0.5184479,5.423553,  -0.1247711,   1.229523,
3.664368,  4.456757,   4.710815,    5.335434,
0.9653931, 1.241425,  -1.046478,    1.432541,
-0.2163239,5.395172,   2.896011,    2.531631,
-0.1858826,1.411484,   3.924606,   -1.409027,
1.572845, -0.8555908, -0.1570435,   5.087326,
2.605103,  5.411194,   1.579483,    3.99762,
3.581284,  0.8553009,  1.599167,    1.951645,
-1.264374, 2.456558,   0.6037598,  -0.924942,
3.846329,  3.33226,    1.346024,    3.284195,
-1.285202, 5.220993,   2.13475,     3.551758,
2.342575,  2.783859,   3.86235,    -0.5907745,
0.2657013, 0.121048,   3.129929,    0.1968079,
2.240265,  1.138199,   0.2993469,   1.333893,
2.242554,  1.659363,   2.549713,    1.118744,
-1.021988,-0.08036804,-1.731979,    5.32811,
-1.141235, 0.8353882,  2.850235,    0.6282501,
2.147797,  0.6879883,  2.240723,    1.567123,
-0.7725067,2.614029,  -0.7088776,   2.160156,
0.1915436, 4.540985,   4.262894,    4.336594,
4.716309,  2.460678,   2.054184,   -0.7386322,
2.912033,  3.17868,   -0.02131653, -1.199829,
4.111832, -0.5649109,  1.174591,    0.6387787,
4.294022, -0.9700317, -0.03001404, -0.6706543,
1.599167,  0.851181,   1.786163,    1.770599,
0.6392365, 1.941803,  -1.095459,    1.896484,
2.553375,  3.496597,   2.176407,    0.5808716,
4.014557,  2.432297,   0.001800537, 3.029907,
2.14093,   3.916824,   4.657715,    4.674881,
-1.489365, 4.004257,   4.805115,    2.83078,
-0.7615204,0.2599792, -0.7530518,   0.1386719,
4.314621,  2.022369,  -1.727402,   -0.4461212,
-1.840927, 0.6859283,  2.66095,     1.900146,
2.095154, -0.84758,    4.175003,   -1.750061,
-1.80545,  0.8358459,  2.622269,   -1.847107,
2.699173,  4.863937,   0.8108978,   3.470734
};

/* Signed Integer vector for IQmath kernels  (Range : -32767 to 32767)*/
int zin[Nmax] =
{
907,    -21252, -12542,  2261,
29333,  -21514,  13251, -17930,
-344,   -24596, -27270, -7234,
-14600, -8648,   31681,  2317,
17409,   9597,   17505,  18363,
21163,  -22812,  8221,  -12146,
-10034,  27339,  1293,  -6478,
6995,    18703,  28279,  24241,
24019,   11435,  16933,  5365,
-7260,  -9462,  -19646,  21423,
-5512,  -2392,   31401, -24482,
-18834,  30043,  15561, -5962,
18355,   16899,  29937, -30928,
-11880,  16837, -16844,  5867,
-29924,  29885, -11854, -28878,
-3810,   27197,  4733,  -24980,
4571,   -16250, -272,   -17254,
-1510,  -6156,   24443, -4788,
-9292,  -7736,  -29940, -22244,
1463,   12881,  -26406, -6500,
17917,  -16724, -10302, -17696,
-13248, -12810,  25373, -30366,
9903,   -6646,   11551,  15241,
28689,  -17480,  22181,  30617,
18259,  -4490,   11407,  20273,
-22364, -14426, -23900,  23865,
16395,  -19138, -23596, -13462,
19843,  -18420,  4133,   14127,
-19822,  32099, -16382, -4548,
16727,   23651,  25871,  31329,
-6856,  -4444,  -24436, -2774,
-17182,  31851,  10013,  6829,
-16916, -2958,   19001, -27604,
-1548,  -22768, -16664,  29161,
7471,    31991, -1490,   19639,
16001,  -7818,  -1318,   1761,
-26340,  6173,  -10016, -23374,
18317,   13825, -3530,   13405,
-26522,  30329,  3361,   15743,
5177,    9033,   18457, -20454,
-12970, -14234,  12057, -13572,
4283,   -5346,  -12676, -3636,
4303,   -792,    6987,  -5516,
-24222, -15994, -30426,  31265,
-25264, -7992,   9613,  -9802,
3475,   -9280,   4287,  -1598,
-22042,  7549,  -21486,  3583,
-13618,  24387,  21957,  22601,
25919,   6209,   2657,  -21746,
10153,   12483, -15478, -25776,
20637,  -20228, -5028,  -9710,
22229,  -23768, -15554, -21152,
-1318,  -7854,   315,    179,
-9706,   1675,  -24864,  1279,
7019,    15261,  3725,  -10216,
19787,   5961,  -15276,  11183,
3415,    18933,  25407,  25557,
-28306,  19697,  26695,  9443,
-21946, -13020, -21872, -14080,
22409,   2379,  -30386, -19190,
-31378, -9298,   7959,   1311,
3015,   -22698,  21189, -30584,
-31068, -7988,   7621,  -31432,
8293,    27209, -8206,   15035
};

/* Unsigned integer vector for IQmath kernels  (Range : 0 to 32767)*/
unsigned int win[Nmax] = {

16837,  5757,  10112,   17514,
31050,  5626,  23009,   7418,
16211,  4085,  2748,    12766,
9083,   12059, 32224,   17542,
25088,  21182, 25136,   25565,
26965,  4977,  20494,   10310,
11366,  30053, 17030,   13144,
19881,  25735, 30523,   28504,
28393,  22101, 24850,   19066,
12753,  11652, 6560,    27095,
13627,  15187, 32084,   4142,
6966,   31405, 24164,   13402,
25561,  24833, 31352,   919,
10443,  24802, 7961,    19317,
1421,   31326, 10456,   1944,
14478,  29982, 18750,   3893,
18669,  8258,  16247,   7756,
15628,  13305, 28605,   13989,
11737,  12515, 1413,    5261,
17115,  22824, 3180,    13133,
25342,  8021,  11232,   7535,
9759,   9978,  29070,   1200,
21335,  13060, 22159,   24004,
30728,  7643,  27474,   31692,
25513,  14138, 22087,   26520,
5201,   9170,  4433,    28316,
24581,  6814,  4585,    9652,
26305,  7173,  18450,   23447,
6472,   32433, 8192,    14109,
24747,  28209, 29319,   32048,
12955,  14161, 4165,    14996,
7792,   32309, 21390,   19798,
7925,   14904, 25884,   2581,
15609,  4999,  8051,    30964,
20119,  32379, 15638,   26203,
24384,  12474, 15724,   17264,
3213,   19470, 11375,   4696,
25542,  23296, 14618,   23086,
3122,   31548, 18064,   24255,
18972,  20900, 25612,   6156,
9898,   9266,  22412,   9597,
18525,  13710, 10045,   14565,
18535,  15987, 19877,   13625,
4272,   8386,  1170,    32016,
3751,   12387, 21190,   11482,
18121,  11743, 18527,   15584,
5362,   20158, 5640,    18175,
9574,   28577, 27362,   27684,
29343,  19488, 17712,   5510,
21460,  22625, 8644,    3495,
26702,  6269,  13869,   11528,
27498,  4499,  8606,    5807,
15724,  12456, 16541,   16473,
11530,  17221, 3951,    17023,
19893,  24014, 18246,   11275,
26277,  19364, 8745,    21975,
18091,  25850, 29087,   29162,
2230,   26232, 29731,   21105,
5410,   9873,  5447,    9343,
27588,  17573, 1190,    6788,
694,    11734, 20363,   17039,
17891,  5034,  26978,   1091,
849,    12389, 20194,   667,
20530,  29988, 12280,   23901
};


/* Input vector in IQ Format */
int IQ16_in1[Nmax] =
{
0x038BF880, 0xACFCA600, 0xCF026380, 0x08D5ED90,
0x72951980, 0xABF6A880, 0x33C39700, 0xB9F68C80,
0xFEA80280, 0x9FECC200, 0x957AD680, 0xE3BE3900,
0xC6F87300, 0xDE3843C0, 0x7BC10500, 0x090DED90,
0x44017600, 0x257DB480, 0x44617600, 0x47BB6E00,
0x52AB5980, 0xA6E4B280, 0x201DBE80, 0xD08E5E80,
0xD8CE4F00, 0x6ACB2900, 0x050DF580, 0xE6B232E0,
0x1B53C880, 0x490F6B80, 0x6E772180, 0x5EB14000,
0x5DD34280, 0x2CABA680, 0x42257B00, 0x14F5D580,
0xE3A43900, 0xDB0A4A40, 0xB3429B80, 0x53AF5700,
0xEA782B60, 0xF6A81260, 0x7AA90780, 0xA05EBF80,
0xB66E9400, 0x755B1200, 0x3CC98500, 0xE8B62F00,
0x47B36E00, 0x42037B00, 0x74F11480, 0x8730F280,
0xD1985E80, 0x41C57B00, 0xBE348480, 0x16EBD160,
0x8B1CEB00, 0x74BD1480, 0xD1B25E80, 0x8F32E380,
0xF11E1DE0, 0x6A3D2900, 0x127DDAA0, 0x9E6CC480,
0x11DBDB60, 0xC0867FC0, 0xFEF001FE, 0xBC9A8700,
0xFA1A0C00, 0xE7F43040, 0x5F7B3D80, 0xED4C2540,
0xDBB448C0, 0xE1C83CC0, 0x8B0CEB00, 0xA91CB000,
0x05B7F478, 0x32519980, 0x98DACF00, 0xE69C32E0,
0x45FD7300, 0xBEAC8200, 0xD7C251C0, 0xBAE08980,
0xCC4068C0, 0xCDF66380, 0x631D3880, 0x8962F000,
0x26AFB180, 0xE60A3460, 0x2D1FA3C0, 0x3B8987C0,
0x70111E80, 0xBBB88980, 0x56A54F80, 0x77990F80,
0x47537080, 0xEE762380, 0x2C8FA680, 0x4F315E80,
0xA8A4B000, 0xC7A67080, 0xA2A4BD00, 0x5D394280,
0x400B7D80, 0xB53E9680, 0xA3D4BA80, 0xCB6A68C0,
0x4D836400, 0xB80C9180, 0x1025DF80, 0x372F8F40,
0xB2929B80, 0x7D630280, 0xC0027FC0, 0xEE3C2400,
0x41577B00, 0x5C634500, 0x650F3300, 0x7A610780,
0xE53835E0, 0xEEA42300, 0xA08CBF80, 0xF52A15F0,
0xBCE28700, 0x7C6B0500, 0x271DB0C0, 0x1AADC980,
0xBDEC8480, 0xF4721700, 0x4A396900, 0x942CD900,
0xF9F40C00, 0xA710B280, 0xBEE88200, 0x71E91980,
0x1D2FC4A0, 0x7CF70280, 0xFA2E0B80, 0x4CB76400,
0x3E818280, 0xE1763D60, 0xFADA0A78, 0x06E1F168,
0x991CCF00, 0x181DCFA0, 0xD8E04F00, 0xA4B2B800,
0x478D7080, 0x36019200, 0xF2361B50, 0x345D9480,
0x9866D180, 0x76790F80, 0x0D21E560, 0x3D7F8280,
0x1439D680, 0x2349B880, 0x48196E00, 0xB01AA100,
0xCD566640, 0xC8667080, 0x2F19A140, 0xCAFC6B40,
0x10BBDD80, 0xEB1E29E0, 0xCE7C6380, 0xF1CC1C60,
0x10CFDD80, 0xFCE805F8, 0x1B4BC880, 0x8BD6EB00,
0xC1867D40, 0x8926F000, 0x7A210A00, 0x9D50C700,
0xE0C83EE0, 0x258DB380, 0xD9B64CC0, 0x0D93E4A0,
0xDBC048C0, 0x10BFDD80, 0xF9C20C80, 0xA9E6AD80,
0x1D7DC4A0, 0xAC12A880, 0x0DFFE390, 0xCACE6B40,
0x5F434000, 0x55C55200, 0x58494D00, 0x653F3300,
0x1841CEA0, 0x0A61EA80, 0xAB0EAB00, 0x27A9B0C0,
0x30C39EC0, 0xC38A7AC0, 0x9B50C980, 0x509D5C00,
0xB0FC9E00, 0xEC5C2740, 0xDA124C40, 0x56D54F80,
0xA328BA80, 0xC33E7AC0, 0xAD60A600, 0xFADA0A78,
0xE1523DE0, 0x013BFD7E, 0x00B3FE7D, 0xDA164C40,
0x068BF270, 0x9EE0C480, 0x04FFF580, 0x1B6BC880,
0x3B9D87C0, 0x0E8DE290, 0xD8184F00, 0x4D4B6400,
0x1749D060, 0xC4547800, 0x2BAFA680, 0x0D57E4A0,
0x49F56B80, 0x633F3880, 0x63D53600, 0x916EDE00,
0x4CF16400, 0x68472E00, 0x24E3B580, 0xAA46AD80,
0xCD246640, 0xAA90AB00, 0xC9006DC0, 0x57894F80,
0x094BEC90, 0x894EF000, 0xB50A9680, 0x856EF800,
0xDBAE48C0, 0x1F17C080, 0x051FF580, 0x0BC7E770,
0xA756B280, 0x52C55980, 0x8888F000, 0x86A4F580,
0xE0CC3EE0, 0x1DC5C3A0, 0x8538F800, 0x2065BE80,
0x6A492900, 0xDFF24040, 0x3ABB8A40, 0x86A4F580
};

/* Second input vector in IQ format */
int IQ16_in2[Nmax] =
{
0x01151980, 0xE6AA6920, 0xF10C7D20, 0x02B24E7C,
0x22F80480, 0xE65A7460, 0x0FCC2FA0, 0xEAA03420,
0xFF9704FD, 0xE2ADE740, 0xDF7DDD00, 0xF7605C20,
0xEE987000, 0xF5B0D780, 0x25C49180, 0x02C36580,
0x14C11AE0, 0x0B7112F0, 0x14DE66E0, 0x15E43E00,
0x193ABBE0, 0xE4CE5620, 0x09CD26F0, 0xF1855670,
0xF409DE60, 0x20977F80, 0x018AE5C2, 0xF84712A8,
0x08570210, 0x164C0080, 0x21B65C80, 0x1CE61060,
0x1CA25060, 0x0DA1FCB0, 0x142FD780, 0x06659230,
0xF7586D00, 0xF4B86E00, 0xE8948580, 0x198A1400,
0xF96DDF30, 0xFD2604F8, 0x256F1E80, 0xE2D0B180,
0xE98C5320, 0x23D0B100, 0x128D2420, 0xF8E48B38,
0x15E1CD00, 0x14257740, 0x23B05800, 0xDB218800,
0xF1D683C0, 0x14128B80, 0xEBEB9FA0, 0x06FEC520,
0xDC53ED80, 0x23A07980, 0xF1DE7320, 0xDD932400,
0xFB7547E8, 0x206C2980, 0x05A4B378, 0xE238B720,
0x05734350, 0xECA0E5C0, 0xFFACFDFF, 0xEB6E8060,
0xFE332F40, 0xF8A95700, 0x1D23B580, 0xFA4AD1A0,
0xF4EC4F50, 0xF6C729B0, 0xDC4F0B80, 0xE57BACE0,
0x01BEC6FE, 0x0F5B4560, 0xE0858920, 0xF8405BE0,
0x155C2280, 0xEC103EA0, 0xF3B814F0, 0xEAE79D60,
0xF03508E0, 0xF0BAB3A0, 0x1E3F8560, 0xDBCD0A40,
0x0BCE7540, 0xF813CDC8, 0x0DC56310, 0x122B7BE0,
0x22337C00, 0xEB298820, 0x1A7166E0, 0x247FDD00,
0x15C48100, 0xFAA5C308, 0x0D997120, 0x182B20C0,
0xE5570E00, 0xEECD89E0, 0xE3824E40, 0x1C735160,
0x138BA840, 0xE92F8CE0, 0xE3DF1420, 0xEFF3BA40,
0x17A7E6E0, 0xEA0AAAA0, 0x04ED9890, 0x10D78520,
0xE85ECFC0, 0x26442200, 0xEC789D60, 0xFA940FD8,
0x13F0F9E0, 0x1C320280, 0x1ED78000, 0x25592580,
0xF7D3B780, 0xFAB3CCC8, 0xE2DEBB40, 0xFCB17180,
0xEB847980, 0x25F87300, 0x0BF006F0, 0x08245960,
0xEBD5A680, 0xFC794A7C, 0x16A6F1A0, 0xDF17EF40,
0xFE27967E, 0xE4DBC3C0, 0xEC228E40, 0x22C38700,
0x08E84560, 0x26232C80, 0xFE3949BE, 0x1769A560,
0x13136B00, 0xF6AE2340, 0xFE6DC73C, 0x0219B804,
0xE099AD80, 0x075C2728, 0xF40F5CA0, 0xE422D3E0,
0x15D63440, 0x107B5B20, 0xFBCABAD8, 0x0FFB2EE0,
0xE06222C0, 0x2427F900, 0x04020000, 0x12C4AEE0,
0x062C32B0, 0x0AC4F480, 0x1600EDE0, 0xE79DF080,
0xF089DFB0, 0xEF0821A0, 0x0E5FCE50, 0xEFD22860,
0x051B5F38, 0xF9A087E8, 0xF0E39880, 0xFBAA61C0,
0x052179D8, 0xFF0E4D00, 0x085490E0, 0xF96CA6A0,
0xE3200A20, 0xECEF05C0, 0xDBBABAC0, 0x25459D80,
0xE1E20BA0, 0xF67909B0, 0x0B75F500, 0xF450AB70,
0x0424CA40, 0xF4EFF8C0, 0x051C97D0, 0xFE18543E,
0xE5B95240, 0x09001330, 0xE662FFE0, 0x0445BFC0,
0xEFC41EA0, 0x1D129E80, 0x1A2D0B00, 0x1AF19380,
0x1EE625E0, 0x076723D8, 0x032B2804, 0xE613A740,
0x0C1AC080, 0x0EE1CFA0, 0xED8C7E60, 0xE145CBA0,
0x189A3640, 0xE7E2E8E0, 0xFA0193B0, 0xF46CBEF0,
0x1A800D00, 0xE3AA96A0, 0xED754CA0, 0xE6C8ED80,
0xFE6DC73C, 0xF6A326E0, 0x00606F80, 0x0036EE80,
0xF46DF780, 0x01FF793E, 0xE25C1DE0, 0x0186A000,
0x085E5500, 0x12319680, 0x04711580, 0xF3D253A0,
0x1796D020, 0x071B74C0, 0xEDCA2380, 0x0D551540,
0x04127AA0, 0x16923120, 0x1E49E5E0, 0x1E77AC80,
0xDE41B380, 0x177B58E0, 0x1FD2F700, 0x0B4213B0,
0xE5D69E60, 0xF07A9D60, 0xE5ED33A0, 0xEF3720E0,
0x1AB6FB60, 0x02D65140, 0xDBC6EF80, 0xE91FAE80,
0xDA9833C0, 0xF4EA7A90, 0x097D3270, 0x019063FE,
0x039868C0, 0xE4F12060, 0x1942AB00, 0xDB8A8300,
0xDAF6CE80, 0xF67A4200, 0x09160C50, 0xDA87B900,
0x09E32000, 0x206FD300, 0xF637BAD0, 0x11EC9E40
};

/* Third input vector in IQ format (IQ equivalent of Ain) */
int IQ16_in3[Nmax]=
{
0x000046F0, 0xFFF983AF, 0xFFFC2C27, 0x0000B0B8,
0x0008F3B8, 0xFFF96F37, 0x00040B4F, 0xFFFA8737,
0xFFFFE51F, 0xFFF87E6F, 0xFFF7AD87, 0xFFFDCAD7,
0xFFFB8B60, 0xFFFD5C60, 0x0009AB28, 0x0000B518,
0x00055027, 0x0002EDD7, 0x000557A8, 0x00059AB0,
0x00067570, 0xFFF909CF, 0x00028257, 0xFFFC4B17,
0xFFFCF017, 0x000857F0, 0x00006518, 0xFFFE05E7,
0x00022290, 0x0005B540, 0x0008A160, 0x000765E7,
0x0007548F, 0x00037D6F, 0x00052AF8, 0x0001A337,
0xFFFDC8D0, 0xFFFD1CC8, 0xFFFA0128, 0x000689C0,
0xFFFE515F, 0xFFFF451F, 0x00099548, 0xFFF88758,
0xFFFA4097, 0x00092B30, 0x0004BFC8, 0xFFFE2E37,
0x00059A10, 0x00052850, 0x000922E8, 0xFFF68FBF,
0xFFFC5FE0, 0x00052378, 0xFFFADC0F, 0x0001CA6F,
0xFFF6DE2F, 0x00091ED8, 0xFFFC61E7, 0xFFF72FE7,
0xFFFED657, 0x00084CD8, 0x000171D7, 0xFFF8606F,
0x00016530, 0xFFFB0A78, 0xFFFFEABF, 0xFFFABC07,
0xFFFF8A08, 0xFFFE1F10, 0x000775B0, 0xFFFE89EF,
0xFFFD2A10, 0xFFFDA39F, 0xFFF6DCEF, 0xFFF9362F,
0x0000725F, 0x0003EE67, 0xFFF7F107, 0xFFFE042F,
0x000577D8, 0xFFFAE56F, 0xFFFCDB27, 0xFFFA997F,
0xFFFBF4FF, 0xFFFC1737, 0x0007BE57, 0xFFF6BBA7,
0x000305C0, 0xFFFDF8C8, 0x00038680, 0x0004A6C7,
0x0008C168, 0xFFFAAA5F, 0x0006C4F8, 0x00095808,
0x00059290, 0xFFFEA138, 0x00037B3F, 0x00062FE8,
0xFFF92CCF, 0xFFFB98F7, 0xFFF8B4CF, 0x00074888,
0x000500F0, 0xFFFA28D7, 0xFFF8CC8F, 0xFFFBE448,
0x00060E50, 0xFFFA60EF, 0x000142F8, 0x00044FBF,
0xFFF9F368, 0x0009CBD0, 0xFFFB0027, 0xFFFE9CB0,
0x00051ADF, 0x000737D0, 0x0007E540, 0x00098FA8,
0xFFFDE860, 0xFFFEA4D0, 0xFFF88AF0, 0xFFFF2747,
0xFFFAC1A8, 0x0009B870, 0x00030E57, 0x00021598,
0xFFFAD66F, 0xFFFF18E7, 0x0005CC88, 0xFFF7936F,
0xFFFF870F, 0xFFF90D3F, 0xFFFAEA1F, 0x0008E648,
0x000247BF, 0x0009C360, 0xFFFF8B97, 0x0005FE5F,
0x0004E228, 0xFFFD9D38, 0xFFFF9907, 0x000089A8,
0xFFF7F62F, 0x0001E257, 0xFFFCF17F, 0xFFF8DDE7,
0x00059718, 0x00043827, 0xFFFEEC37, 0x00041758,
0xFFF7E7F7, 0x00094188, 0x000106A8, 0x0004CE00,
0x00019487, 0x0002C1C8, 0x0005A208, 0xFFF9C208,
0xFFFC0AB7, 0xFFFBA7F7, 0x0003AE08, 0xFFFBDBAF,
0x00014EB0, 0xFFFE5E57, 0xFFFC21B0, 0xFFFEE3F0,
0x00015040, 0xFFFFC220, 0x000221EF, 0xFFFE510F,
0xFFF89BA7, 0xFFFB1E78, 0xFFF6B6F7, 0x00098AA8,
0xFFF84A3F, 0xFFFD8F9F, 0x0002EF18, 0xFFFD0237,
0x00010F90, 0xFFFD2B00, 0x00014F00, 0xFFFF8327,
0xFFF945F7, 0x00024DD7, 0xFFF97167, 0x00011800,
0xFFFBD817, 0x00077150, 0x0006B378, 0x0006E5C8,
0x0007E8FF, 0x0001E528, 0x0000CFA8, 0xFFF95D17,
0x00031948, 0x0003CF4F, 0xFFFB46C7, 0xFFF8223F,
0x00064C58, 0xFFF9D3AF, 0xFFFE772F, 0xFFFD0967,
0x0006C8B8, 0xFFF8BF1F, 0xFFFB40D7, 0xFFF98B7F,
0xFFFF9907, 0xFFFD9A67, 0x000018B0, 0x00000E10,
0xFFFD09B8, 0x000082F0, 0xFFF8697F, 0x00006400,
0x00022470, 0x0004A858, 0x00012318, 0xFFFCE1DF,
0x000609EF, 0x0001D1C8, 0xFFFB568F, 0x000369C0,
0x00010ADF, 0x0005C737, 0x0007C0FF, 0x0007CCB8,
0xFFF75C97, 0x000602E8, 0x000825A0, 0x0002E1D0,
0xFFF94D77, 0xFFFC06CF, 0xFFF9533F, 0xFFFBB3FF,
0x0006D6C7, 0x0000B9F0, 0xFFF6BA17, 0xFFFA24C8,
0xFFF66C97, 0xFFFD2998, 0x00026DDF, 0x0000667F,
0x0000EBA0, 0xFFF912B7, 0x00067778, 0xFFF6AA9F,
0xFFF684CF, 0xFFFD8FF0, 0x00025378, 0xFFF6685F,
0x000287F8, 0x00084DC8, 0xFFFD7EE8, 0x000496B0

};


/*FOurth input vector in IQ format (IQ equivalent of Bin)*/
int IQ16_in4[Nmax]=
{
0x0001DA9A, 0xFFFF5161, 0x0000508F, 0x00020245,
0x00051B65, 0xFFFF49B4, 0x0003443E, 0xFFFFB2B4,
0x0001B5EC, 0xFFFEEF69, 0xFFFEA112, 0x0000EC11,
0x00001444, 0x0000C2A4, 0x0005602F, 0x000203E9,
0x0003BE0F, 0x0002D931, 0x0003C0DF, 0x0003DA02,
0x00042C0A, 0xFFFF23AD, 0x0002B0E1, 0x00005C29,
0x00009A09, 0x0004E0FA, 0x0001E5E9, 0x00010237,
0x00028CF6, 0x0003E3F8, 0x0004FC84, 0x00048637,
0x00047FB6, 0x00030F0A, 0x0003B01D, 0x00025D35,
0x0000EB4E, 0x0000AACB, 0xFFFF806E, 0x000433A8,
0x00011E84, 0x000179EC, 0x000557FB, 0xFFFEF2C0,
0xFFFF9838, 0x00053032, 0x000387EB, 0x00011155,
0x0003D9C6, 0x0003AF1E, 0x00052D17, 0xFFFE35E7,
0x000063F4, 0x0003AD4D, 0xFFFFD285, 0x00026BEA,
0xFFFE5351, 0x00052B91, 0x000064B7, 0xFFFE71F6,
0x00015061, 0x0004DCD1, 0x00024AB1, 0xFFFEE429,
0x000245F2, 0xFFFFE3EC, 0x0001B808, 0xFFFFC682,
0x000193C3, 0x00010BA6, 0x00048C22, 0x000133BA,
0x0000AFC6, 0x0000DD5C, 0xFFFE52D9, 0xFFFF3451,
0x0001EAE4, 0x00033967, 0xFFFEBA62, 0x00010192,
0x0003CCF1, 0xFFFFD609, 0x0000922F, 0xFFFFB98F,
0x00003BE0, 0x000048B5, 0x0004A761, 0xFFFE465E,
0x0002E228, 0x0000FD4B, 0x00031270, 0x00037E8B,
0x00050887, 0xFFFFBFE3, 0x000449DD, 0x00054103,
0x0003D6F6, 0x00013C75, 0x00030E38, 0x000411F7,
0xFFFF30CD, 0x0000195D, 0xFFFF03CD, 0x00047B33,
0x0003A05A, 0xFFFF8F50, 0xFFFF0CB5, 0x0000359B,
0x0004055E, 0xFFFFA459, 0x0002391D, 0x00035DE8,
0xFFFF7B46, 0x00056C6E, 0xFFFFE00E, 0x00013AC2,
0x0003AA14, 0x000474EE, 0x0004B5F8, 0x000555DF,
0x0000F724, 0x00013DCE, 0xFFFEF419, 0x00016EBB,
0xFFFFC89E, 0x0005652A, 0x0002E561, 0x00028819,
0xFFFFD069, 0x00016957, 0x0003ECB3, 0xFFFE9749,
0x000192A6, 0xFFFF24F7, 0xFFFFD7CB, 0x0005165B,
0x00029AE8, 0x00056944, 0x00019459, 0x0003FF64,
0x000394CF, 0x0000DAF5, 0x00019963, 0x0001F39F,
0xFFFEBC51, 0x000274E1, 0x00009A90, 0xFFFF1336,
0x0003D8A9, 0x0003550F, 0x00015895, 0x000348C1,
0xFFFEB6FC, 0x00053893, 0x0002227F, 0x00038D40,
0x000257B3, 0x0002C8AB, 0x0003DCC3, 0xFFFF68C2,
0x00004405, 0x00001EFD, 0x00032143, 0x00003262,
0x00023D82, 0x00012361, 0x00004CA2, 0x0001557A,
0x00023E18, 0x0001A8CC, 0x00028CBA, 0x00011E66,
0xFFFEFA5E, 0xFFFFEB6C, 0xFFFE449C, 0x000553FF,
0xFFFEDBD7, 0x0000D5DC, 0x0002D9A9, 0x0000A0D5,
0x000225D6, 0x0000B020, 0x00023DA0, 0x0001912F,
0xFFFF3A3C, 0x00029D31, 0xFFFF4A86, 0x00022900,
0x00003109, 0x00048A7E, 0x0004434D, 0x0004562B,
0x0004B760, 0x000275EF, 0x00020DDF, 0xFFFF42E8,
0x0002E97B, 0x00032DBE, 0xFFFFFA8A, 0xFFFECCD7,
0x00041CA1, 0xFFFF6F61, 0x00012CB2, 0x0000A387,
0x00044B45, 0xFFFF07AB, 0xFFFFF850, 0xFFFF544F,
0x00019963, 0x0000D9E7, 0x0001C942, 0x0001C546,
0x0000A3A5, 0x0001F11A, 0xFFFEE78F, 0x0001E580,
0x00028DAA, 0x00037F21, 0x00022D29, 0x000094B4,
0x000403BA, 0x00026EAB, 0x00000076, 0x000307A8,
0x00022414, 0x0003EAB5, 0x0004A860, 0x0004ACC5,
0xFFFE82B8, 0x00040117, 0x0004CE1C, 0x0002D4AE,
0xFFFF3D0C, 0x0000428E, 0xFFFF3F37, 0x00002380,
0x0004508B, 0x000205BA, 0xFFFE45C8, 0xFFFF8DCA,
0xFFFE28B8, 0x0000AF99, 0x0002A934, 0x0001E670,
0x0002185C, 0xFFFF2704, 0x00042CCD, 0xFFFE3FFB,
0xFFFE31CD, 0x0000D5FA, 0x00029F4D, 0xFFFE2723,
0x0002B2FD, 0x0004DD2B, 0x0000CF97, 0x00037882
};

/* Fifth input vector in IQ format (IQ format of unsigned integers) */
int IQ16_in5[Nmax]=
{
0x0000038B, 0x00005303, 0x000030FD, 0x000008D5,
0x00007295, 0x00005409, 0x000033C3, 0x00004609,
0x00000157, 0x00006013, 0x00006A85, 0x00001C41,
0x00003907, 0x000021C7, 0x00007BC1, 0x0000090D,
0x00004401, 0x0000257D, 0x00004461, 0x000047BB,
0x000052AB, 0x0000591B, 0x0000201D, 0x00002F71,
0x00002731, 0x00006ACB, 0x0000050D, 0x0000194D,
0x00001B53, 0x0000490F, 0x00006E77, 0x00005EB1,
0x00005DD3, 0x00002CAB, 0x00004225, 0x000014F5,
0x00001C5B, 0x000024F5, 0x00004CBD, 0x000053AF,
0x00001587, 0x00000957, 0x00007AA9, 0x00005FA1,
0x00004991, 0x0000755B, 0x00003CC9, 0x00001749,
0x000047B3, 0x00004203, 0x000074F1, 0x000078CF,
0x00002E67, 0x000041C5, 0x000041CB, 0x000016EB,
0x000074E3, 0x000074BD, 0x00002E4D, 0x000070CD,
0x00000EE1, 0x00006A3D, 0x0000127D, 0x00006193,
0x000011DB, 0x00003F79, 0x0000010F, 0x00004365,
0x000005E5, 0x0000180B, 0x00005F7B, 0x000012B3,
0x0000244B, 0x00001E37, 0x000074F3, 0x000056E3,
0x000005B7, 0x00003251, 0x00006725, 0x00001963,
0x000045FD, 0x00004153, 0x0000283D, 0x0000451F,
0x000033BF, 0x00003209, 0x0000631D, 0x0000769D,
0x000026AF, 0x000019F5, 0x00002D1F, 0x00003B89,
0x00007011, 0x00004447, 0x000056A5, 0x00007799,
0x00004753, 0x00001189, 0x00002C8F, 0x00004F31,
0x0000575B, 0x00003859, 0x00005D5B, 0x00005D39,
0x0000400B, 0x00004AC1, 0x00005C2B, 0x00003495,
0x00004D83, 0x000047F3, 0x00001025, 0x0000372F,
0x00004D6D, 0x00007D63, 0x00003FFD, 0x000011C3,
0x00004157, 0x00005C63, 0x0000650F, 0x00007A61,
0x00001AC7, 0x0000115B, 0x00005F73, 0x00000AD5,
0x0000431D, 0x00007C6B, 0x0000271D, 0x00001AAD,
0x00004213, 0x00000B8D, 0x00004A39, 0x00006BD3,
0x0000060B, 0x000058EF, 0x00004117, 0x000071E9,
0x00001D2F, 0x00007CF7, 0x000005D1, 0x00004CB7,
0x00003E81, 0x00001E89, 0x00000525, 0x000006E1,
0x000066E3, 0x0000181D, 0x0000271F, 0x00005B4D,
0x0000478D, 0x00003601, 0x00000DC9, 0x0000345D,
0x00006799, 0x00007679, 0x00000D21, 0x00003D7F,
0x00001439, 0x00002349, 0x00004819, 0x00004FE5,
0x000032A9, 0x00003799, 0x00002F19, 0x00003503,
0x000010BB, 0x000014E1, 0x00003183, 0x00000E33,
0x000010CF, 0x00000317, 0x00001B4B, 0x00007429,
0x00003E79, 0x000076D9, 0x00007A21, 0x000062AF,
0x00001F37, 0x0000258D, 0x00002649, 0x00000D93,
0x0000243F, 0x000010BF, 0x0000063D, 0x00005619,
0x00001D7D, 0x000053ED, 0x00000DFF, 0x00003531,
0x00005F43, 0x000055C5, 0x00005849, 0x0000653F,
0x00001841, 0x00000A61, 0x000054F1, 0x000027A9,
0x000030C3, 0x00003C75, 0x000064AF, 0x0000509D,
0x00004F03, 0x000013A3, 0x000025ED, 0x000056D5,
0x00005CD7, 0x00003CC1, 0x0000529F, 0x00000525,
0x00001EAD, 0x0000013B, 0x000000B3, 0x000025E9,
0x0000068B, 0x0000611F, 0x000004FF, 0x00001B6B,
0x00003B9D, 0x00000E8D, 0x000027E7, 0x00004D4B,
0x00001749, 0x00003BAB, 0x00002BAF, 0x00000D57,
0x000049F5, 0x0000633F, 0x000063D5, 0x00006E91,
0x00004CF1, 0x00006847, 0x000024E3, 0x000055B9,
0x000032DB, 0x0000556F, 0x000036FF, 0x00005789,
0x0000094B, 0x000076B1, 0x00004AF5, 0x00007A91,
0x00002451, 0x00001F17, 0x0000051F, 0x00000BC7,
0x000058A9, 0x000052C5, 0x00007777, 0x0000795B,
0x00001F33, 0x00001DC5, 0x00007AC7, 0x00002065,
0x00006A49, 0x0000200D, 0x00003ABB, 0x0000795B
};

/* Input vector in IQ24 format)*/
int IQ24_in[Nmax] =
{
0x8BF88000, 0xFCA60000, 0x02638000, 0xD5ED9000,
0x95198000, 0xF6A88000, 0xC3970000, 0xF68C8000,
0xA8028000, 0xECC20000, 0x7AD68000, 0xBE390000,
0xF8730000, 0x3843C000, 0xC1050000, 0x0DED9000,
0x01760000, 0x7DB48000, 0x61760000, 0xBB6E0000,
0xAB598000, 0xE4B28000, 0x1DBE8000, 0x8E5E8000,
0xCE4F0000, 0xCB290000, 0x0DF58000, 0xB232E000,
0x53C88000, 0x0F6B8000, 0x77218000, 0xB1400000,
0xD3428000, 0xABA68000, 0x257B0000, 0xF5D58000,
0xA4390000, 0x0A4A4000, 0x429B8000, 0xAF570000,
0x782B6000, 0xA8126000, 0xA9078000, 0x5EBF8000,
0x6E940000, 0x5B120000, 0xC9850000, 0xB62F0000,
0xB36E0000, 0x037B0000, 0xF1148000, 0x30F28000,
0x985E8000, 0xC57B0000, 0x34848000, 0xEBD16000,
0x1CEB0000, 0xBD148000, 0xB25E8000, 0x32E38000,
0x1E1DE000, 0x3D290000, 0x7DDAA000, 0x6CC48000,
0xDBDB6000, 0x867FC000, 0xF001FE00, 0x9A870000,
0x1A0C0000, 0xF4304000, 0x7B3D8000, 0x4C254000,
0xB448C000, 0xC83CC000, 0x0CEB0000, 0x1CB00000,
0xB7F47800, 0x51998000, 0xDACF0000, 0x9C32E000,
0xFD730000, 0xAC820000, 0xC251C000, 0xE0898000,
0x4068C000, 0xF6638000, 0x1D388000, 0x62F00000,
0xAFB18000, 0x0A346000, 0x1FA3C000, 0x8987C000,
0x111E8000, 0xB8898000, 0xA54F8000, 0x990F8000,
0x53708000, 0x76238000, 0x8FA68000, 0x315E8000,
0xA4B00000, 0xA6708000, 0xA4BD0000, 0x39428000,
0x0B7D8000, 0x3E968000, 0xD4BA8000, 0x6A68C000,
0x83640000, 0x0C918000, 0x25DF8000, 0x2F8F4000,
0x929B8000, 0x63028000, 0x027FC000, 0x3C240000,
0x577B0000, 0x63450000, 0x0F330000, 0x61078000,
0x3835E000, 0xA4230000, 0x8CBF8000, 0x2A15F000,
0xE2870000, 0x6B050000, 0x1DB0C000, 0xADC98000,
0xEC848000, 0x72170000, 0x39690000, 0x2CD90000,
0xF40C0000, 0x10B28000, 0xE8820000, 0xE9198000,
0x2FC4A000, 0xF7028000, 0x2E0B8000, 0xB7640000,
0x81828000, 0x763D6000, 0xDA0A7800, 0xE1F16800,
0x1CCF0000, 0x1DCFA000, 0xE04F0000, 0xB2B80000,
0x8D708000, 0x01920000, 0x361B5000, 0x5D948000,
0x66D18000, 0x790F8000, 0x21E56000, 0x7F828000,
0x39D68000, 0x49B88000, 0x196E0000, 0x1AA10000,
0x56664000, 0x66708000, 0x19A14000, 0xFC6B4000,
0xBBDD8000, 0x1E29E000, 0x7C638000, 0xCC1C6000,
0xCFDD8000, 0xE805F800, 0x4BC88000, 0xD6EB0000,
0x867D4000, 0x26F00000, 0x210A0000, 0x50C70000,
0xC83EE000, 0x8DB38000, 0xB64CC000, 0x93E4A000,
0xC048C000, 0xBFDD8000, 0xC20C8000, 0xE6AD8000,
0x7DC4A000, 0x12A88000, 0xFFE39000, 0xCE6B4000,
0x43400000, 0xC5520000, 0x494D0000, 0x3F330000,
0x41CEA000, 0x61EA8000, 0x0EAB0000, 0xA9B0C000,
0xC39EC000, 0x8A7AC000, 0x50C98000, 0x9D5C0000,
0xFC9E0000, 0x5C274000, 0x124C4000, 0xD54F8000,
0x28BA8000, 0x3E7AC000, 0x60A60000, 0xDA0A7800,
0x523DE000, 0x3BFD7E00, 0xB3FE7D00, 0x164C4000,
0x8BF27000, 0xE0C48000, 0xFFF58000, 0x6BC88000,
0x9D87C000, 0x8DE29000, 0x184F0000, 0x4B640000,
0x49D06000, 0x54780000, 0xAFA68000, 0x57E4A000,
0xF56B8000, 0x3F388000, 0xD5360000, 0x6EDE0000,
0xF1640000, 0x472E0000, 0xE3B58000, 0x46AD8000,
0x24664000, 0x90AB0000, 0x006DC000, 0x894F8000,
0x4BEC9000, 0x4EF00000, 0x0A968000, 0x6EF80000,
0xAE48C000, 0x17C08000, 0x1FF58000, 0xC7E77000,
0x56B28000, 0xC5598000, 0x88F00000, 0xA4F58000,
0xCC3EE000, 0xC5C3A000, 0x38F80000, 0x65BE8000,
0x49290000, 0xF2404000, 0xBB8A4000, 0xA4F58000
};

/* Input vector in IQ12 format */
int IQ12_in[Nmax]=
{
0x0038BF88, 0xFACFCA60, 0xFCF02638, 0x008D5ED9,
0x07295198, 0xFABF6A88, 0x033C3970, 0xFB9F68C8,
0xFFEA8028, 0xF9FECC20, 0xF957AD68, 0xFE3BE390,
0xFC6F8730, 0xFDE3843C, 0x07BC1050, 0x0090DED9,
0x04401760, 0x0257DB48, 0x04461760, 0x047BB6E0,
0x052AB598, 0xFA6E4B28, 0x0201DBE8, 0xFD08E5E8,
0xFD8CE4F0, 0x06ACB290, 0x0050DF58, 0xFE6B232E,
0x01B53C88, 0x0490F6B8, 0x06E77218, 0x05EB1400,
0x05DD3428, 0x02CABA68, 0x042257B0, 0x014F5D58,
0xFE3A4390, 0xFDB0A4A4, 0xFB3429B8, 0x053AF570,
0xFEA782B6, 0xFF6A8126, 0x07AA9078, 0xFA05EBF8,
0xFB66E940, 0x0755B120, 0x03CC9850, 0xFE8B62F0,
0x047B36E0, 0x042037B0, 0x074F1148, 0xF8730F28,
0xFD1985E8, 0x041C57B0, 0xFBE34848, 0x016EBD16,
0xF8B1CEB0, 0x074BD148, 0xFD1B25E8, 0xF8F32E38,
0xFF11E1DE, 0x06A3D290, 0x0127DDAA, 0xF9E6CC48,
0x011DBDB6, 0xFC0867FC, 0xFFEF001F, 0xFBC9A870,
0xFFA1A0C0, 0xFE7F4304, 0x05F7B3D8, 0xFED4C254,
0xFDBB448C, 0xFE1C83CC, 0xF8B0CEB0, 0xFA91CB00,
0x005B7F47, 0x03251998, 0xF98DACF0, 0xFE69C32E,
0x045FD730, 0xFBEAC820, 0xFD7C251C, 0xFBAE0898,
0xFCC4068C, 0xFCDF6638, 0x0631D388, 0xF8962F00,
0x026AFB18, 0xFE60A346, 0x02D1FA3C, 0x03B8987C,
0x070111E8, 0xFBBB8898, 0x056A54F8, 0x077990F8,
0x04753708, 0xFEE76238, 0x02C8FA68, 0x04F315E8,
0xFA8A4B00, 0xFC7A6708, 0xFA2A4BD0, 0x05D39428,
0x0400B7D8, 0xFB53E968, 0xFA3D4BA8, 0xFCB6A68C,
0x04D83640, 0xFB80C918, 0x01025DF8, 0x0372F8F4,
0xFB2929B8, 0x07D63028, 0xFC0027FC, 0xFEE3C240,
0x041577B0, 0x05C63450, 0x0650F330, 0x07A61078,
0xFE53835E, 0xFEEA4230, 0xFA08CBF8, 0xFF52A15F,
0xFBCE2870, 0x07C6B050, 0x0271DB0C, 0x01AADC98,
0xFBDEC848, 0xFF472170, 0x04A39690, 0xF942CD90,
0xFF9F40C0, 0xFA710B28, 0xFBEE8820, 0x071E9198,
0x01D2FC4A, 0x07CF7028, 0xFFA2E0B8, 0x04CB7640,
0x03E81828, 0xFE1763D6, 0xFFADA0A7, 0x006E1F16,
0xF991CCF0, 0x0181DCFA, 0xFD8E04F0, 0xFA4B2B80,
0x0478D708, 0x03601920, 0xFF2361B5, 0x0345D948,
0xF9866D18, 0x076790F8, 0x00D21E56, 0x03D7F828,
0x01439D68, 0x02349B88, 0x048196E0, 0xFB01AA10,
0xFCD56664, 0xFC866708, 0x02F19A14, 0xFCAFC6B4,
0x010BBDD8, 0xFEB1E29E, 0xFCE7C638, 0xFF1CC1C6,
0x010CFDD8, 0xFFCE805F, 0x01B4BC88, 0xF8BD6EB0,
0xFC1867D4, 0xF8926F00, 0x07A210A0, 0xF9D50C70,
0xFE0C83EE, 0x0258DB38, 0xFD9B64CC, 0x00D93E4A,
0xFDBC048C, 0x010BFDD8, 0xFF9C20C8, 0xFA9E6AD8,
0x01D7DC4A, 0xFAC12A88, 0x00DFFE39, 0xFCACE6B4,
0x05F43400, 0x055C5520, 0x058494D0, 0x0653F330,
0x01841CEA, 0x00A61EA8, 0xFAB0EAB0, 0x027A9B0C,
0x030C39EC, 0xFC38A7AC, 0xF9B50C98, 0x0509D5C0,
0xFB0FC9E0, 0xFEC5C274, 0xFDA124C4, 0x056D54F8,
0xFA328BA8, 0xFC33E7AC, 0xFAD60A60, 0xFFADA0A7,
0xFE1523DE, 0x0013BFD7, 0x000B3FE7, 0xFDA164C4,
0x0068BF27, 0xF9EE0C48, 0x004FFF58, 0x01B6BC88,
0x03B9D87C, 0x00E8DE29, 0xFD8184F0, 0x04D4B640,
0x01749D06, 0xFC454780, 0x02BAFA68, 0x00D57E4A,
0x049F56B8, 0x0633F388, 0x063D5360, 0xF916EDE0,
0x04CF1640, 0x068472E0, 0x024E3B58, 0xFAA46AD8,
0xFCD24664, 0xFAA90AB0, 0xFC9006DC, 0x057894F8,
0x0094BEC9, 0xF894EF00, 0xFB50A968, 0xF856EF80,
0xFDBAE48C, 0x01F17C08, 0x0051FF58, 0x00BC7E77,
0xFA756B28, 0x052C5598, 0xF8888F00, 0xF86A4F58,
0xFE0CC3EE, 0x01DC5C3A, 0xF8538F80, 0x02065BE8,
0x06A49290, 0xFDFF2404, 0x03ABB8A4, 0xF86A4F58
};


#endif

/*=============================================================================*/
/*                  End of File c6accel_test_inputs.h                      */
/*                              Version : 0.0.1                                */
/*=============================================================================*/







